version: '3.5'

services:
  db:
    image: postgres:14.1
    volumes:
      - database_volume:/var/lib/postgresql/data
    networks:
      - database_network
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  redis:
    image: redis:6.2.6
    networks:
      - redis_network

  caddy:
    image: caddy:2.6.1-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/_caddy/Caddyfile:/etc/caddy/Caddyfile
      - static_files_volume:/usr/share/caddy/static
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - caddy_network
    environment:
      - PROD_HOST_NAME

  django:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DJANGO_SECRET_KEY
    depends_on:
      - db
      - redis
    command: gunicorn webauthnio.wsgi -c gunicorn.cfg.py
    volumes:
      - ./_app:/usr/src/app
      # Django static files will go here so Caddy can access them
      - static_files_volume:/usr/src/app/static
    networks:
      - caddy_network
      - database_network
      - redis_network
    environment:
      - PYTHONUNBUFFERED=0
      - DJANGO_SECRET_KEY=)5uec%f!pe1m-=e$ibn95sa*d%iq*aa(k^ad_1yo^cd+mely#q
      - POSTGRES_USER=vibhor
      - POSTGRES_PASSWORD=vibhor@123
      - PROD_HOST_NAME
      - RP_ID
      - RP_NAME
      - RP_EXPECTED_ORIGIN
      - AASA_APP_ID_PREFIX
      - AASA_BUNDLE_ID

volumes:
  static_files_volume:
  database_volume:
  caddy_data:
  caddy_config:

networks:
  caddy_network:
  database_network:
  redis_network:
